name: 'Helm CI'
description: GitHub Action for hanlde CI of helm charts, Sysdig way'
inputs:
  chart_dir:
    description: "path to chart directory. Example: k8s/redis"
    required: true
  dry_run:
    description: "whether to actually create git tag and push the chart"
    required: false
    default: "false"
  artifactory_url:
    description: "Artifactory repo URL"
    required: false
    default: "https://artifactory.internal.sysdig.com:443/artifactory/helm-local/"
  artifactory_pull_url:
    description: "Artifactory repo pull URL"
    required: false
    default: "https://artifactory.internal.sysdig.com:443/artifactory/helm/"
  artifactory_push_url:
    description: "Artifactory repo push URL"
    required: false
    default: "https://artifactory.internal.sysdig.com:443/artifactory/helm-local/"
  artifactory_username:
    description: "username to use for artifactory"
    required: true
  artifactory_password:
    description: "password to use for artifactory"
    required: true
  github_token:
    description: GITHUB_TOKEN secret
    required: true
  push_to_gar:
    description: "whether or not to push chart to GAR"
    required: false
    default: "false"
  gar_username:
    description: "username to use to access GAR, possibile values are _json_key, _json_key_base64."
    required: false
  gar_json_key:
    description: "json or json_b64 payload used as password to access GAR."
    required: false
  gar_url:
    description: "url domain used by google cloud for GAR."
    required: false
    default: "us-docker.pkg.dev"
  gar_chart_prefix:
    description: "prefix to use in front of chart name."
    required: false
    default: ""
  gcloud_project:
    description: "name of the gcloud project id, which the artifact registry is part of."
    required: false


runs:
  using: "composite"
  steps:
    - name: get chart name
      id: chart_name
      uses: mikefarah/yq@v4.33.3
      with:
        cmd: "yq eval '.name' ${{ inputs.chart_dir }}/Chart.yaml"

    - name: show chart name
      shell: bash
      run: |
        echo "found chart name in Chart.yaml: ${{ steps.chart_name.outputs.result }}"

    - name: bump version
      id: bump_version
      uses: mathieudutour/github-tag-action@v5.6
      with:
        github_token: ${{ inputs.github_token }}
        tag_prefix: helm/${{ steps.chart_name.outputs.result }}-
        dry_run: ${{ inputs.dry_run }}

    - name: test package helm chart
      uses: draios/action-helm-tools@v1.2.4
      if: ${{ inputs.dry_run == 'false' }}
      env:
        ACTION: package
        CHART_DIR: ${{ inputs.chart_dir }}
        CHART_VERSION: ${{ steps.bump_version.outputs.new_version }}
        ARTIFACTORY_URL: ${{ inputs.artifactory_url }}
        ARTIFACTORY_USERNAME: ${{ inputs.artifactory_username }}
        ARTIFACTORY_PASSWORD: ${{ inputs.artifactory_password }}

    - name: publish helm chart to artifactory
      uses: draios/action-helm-tools@v1.2.4
      if: ${{ inputs.dry_run != 'true' }}
      env:
        ACTION: publish
        CHART_DIR: ${{ inputs.chart_dir }}
        CHART_VERSION: ${{ steps.bump_version.outputs.new_version }}
        ARTIFACTORY_URL: ${{ inputs.artifactory_url }}
        ARTIFACTORY_USERNAME: ${{ inputs.artifactory_username }}
        ARTIFACTORY_PASSWORD: ${{ inputs.artifactory_password }}

    - name: "publish helm chart to GAR"
      uses: draios/action-helm-pusher@v0.0.10
      if: ${{ inputs.push_to_gar == 'true' }}
      env:
        DEST_REGISTRY: "GAR"
        GAR_USERNAME: ${{ inputs.gar_username }}
        GAR_JSON_KEY: ${{ inputs.gar_json_key }}
        ARTIFACTORY_URL: "${{ inputs.artifactory_pull_url }}"
        ARTIFACTORY_PULL_URL: "${{ inputs.artifactory_pull_url }}"
        ARTIFACTORY_PUSH_URL: "${{ inputs.artifactory_push_url }}"
        ARTIFACTORY_USERNAME: ${{ inputs.artifactory_username }}
        ARTIFACTORY_PASSWORD: ${{ inputs.artifactory_password }}
        GAR_URL: ${{ inputs.gar_url }}
        GCLOUD_PROJECT: ${{ inputs.gcloud_project }}
        CHART_DIR: ${{ inputs.chart_dir }}
        CHART_PREFIX: ${{ inputs.gar_chart_prefix }}
        CHART_VERSION: ${{ steps.bump_version.outputs.new_version }}
        DEBUG: "TRUE"
        DRYRUN: ${{ inputs.dry_run }}
